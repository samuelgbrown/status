// Generated by CoffeeScript 1.4.0
(function() {
  var AppRouter, AppView, ContentView, GithubFeaturedReposView, HackerNewsTopStoriesView,
    __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  AppView = (function(_super) {

    __extends(AppView, _super);

    function AppView() {
      return AppView.__super__.constructor.apply(this, arguments);
    }

    AppView.prototype.initialize = function() {
      console.log('appview init');
      return this.child = new ContentView();
    };

    return AppView;

  })(Backbone.View);

  ContentView = (function(_super) {

    __extends(ContentView, _super);

    function ContentView() {
      return ContentView.__super__.constructor.apply(this, arguments);
    }

    ContentView.prototype.el = $('.main');

    ContentView.prototype.initialize = function() {
      console.log("content view init");
      this.githubRepos = new GithubFeaturedReposView();
      this.hackerNewsTopStories = new HackerNewsTopStoriesView();
      this.$el.append(this.hackerNewsTopStories.$el);
      return this.$el.append(this.githubRepos.$el);
    };

    return ContentView;

  })(AppView);

  GithubFeaturedReposView = (function(_super) {

    __extends(GithubFeaturedReposView, _super);

    function GithubFeaturedReposView() {
      return GithubFeaturedReposView.__super__.constructor.apply(this, arguments);
    }

    GithubFeaturedReposView.prototype.el = $('#github-featured');

    GithubFeaturedReposView.prototype.initialize = function() {
      this.loadingEl = this.$el.find('.loading')[0];
      return this.render();
    };

    GithubFeaturedReposView.prototype.render = function() {
      this.template = $('#github-featured-template').html();
      return this.populateGithubFeatured();
    };

    GithubFeaturedReposView.prototype.populateGithubFeatured = function() {
      /* Waiting for ben
      		$.ajax
      			url : 'http://feeds.feedburner.com/thechangelog?format=xml'
      			method: 'GET'
      			data: null
      			success: (res) ->
      
      				#extract data from res
      				console.log res
      				#@$el.html(_.template @template, {'success' : true, 'data' : res})
      
      			error: (res) ->
      
      				@$el.html( _.template @template, {'success' : false} )
      */

    };

    GithubFeaturedReposView.prototype.hideLoadState = function() {
      return $(this.loadingEl).hide();
    };

    GithubFeaturedReposView.prototype.showLoadState = function() {
      return $(this.loadingEl).show();
    };

    return GithubFeaturedReposView;

  })(AppView);

  HackerNewsTopStoriesView = (function(_super) {

    __extends(HackerNewsTopStoriesView, _super);

    function HackerNewsTopStoriesView() {
      return HackerNewsTopStoriesView.__super__.constructor.apply(this, arguments);
    }

    HackerNewsTopStoriesView.prototype.el = $('#hacker-news-stories');

    HackerNewsTopStoriesView.prototype.initialize = function() {
      this.loadingEl = this.$el.find('.loading')[0];
      return this.render();
    };

    HackerNewsTopStoriesView.prototype.render = function() {
      var _this = this;
      this.template = $('#hacker-news-stories-template').html();
      return $.ajax({
        url: 'feeds/articles.php',
        method: 'GET',
        data: null,
        success: function(res) {
          _this.hideLoadState();
          return _this.$el.append(_.template(_this.template, {
            'success': true,
            'data': res
          }));
        },
        error: function(res) {
          this.hideLoadState();
          return this.$el.html(_.template(this.template, {
            'success': false
          }));
        }
      });
    };

    HackerNewsTopStoriesView.prototype.hideLoadState = function() {
      return $(this.loadingEl).hide();
    };

    HackerNewsTopStoriesView.prototype.showLoadState = function() {
      return $(this.loadingEl).show();
    };

    return HackerNewsTopStoriesView;

  })(AppView);

  AppRouter = (function(_super) {

    __extends(AppRouter, _super);

    function AppRouter() {
      return AppRouter.__super__.constructor.apply(this, arguments);
    }

    AppRouter.prototype.id = null;

    AppRouter.prototype.routes = {
      "*other": "defaultRoute"
    };

    AppRouter.prototype.start = function() {
      return Backbone.history.start({
        pushState: true
      });
    };

    AppRouter.prototype.defaultRoute = function() {
      return new AppView();
    };

    return AppRouter;

  })(Backbone.Router);

  window.app = {
    router: null,
    status: null,
    view: null
  };

  $(document).ready(function() {
    app.router = new AppRouter();
    return app.router.start();
  });

}).call(this);
